# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  install:
    aliases:
      - default
    cmds:
      - go install github.com/evilmartians/lefthook@latest && lefthook install
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install github.com/goreleaser/goreleaser@latest
      - go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
    desc: install deps
    preconditions:
      - which go

  clean:
    cmds:
      - lefthook uninstall && rm -f $(go env GOPATH)/bin/lefthook
      - rm -f $(go env GOPATH)/bin/golangci-lint
      - rm -f $(go env GOPATH)/bin/goreleaser
      - rm -f $(go env GOPATH)/bin/git-chglog
      - go clean -modcache
    desc: clean deps
    preconditions:
      - which go

  # lint
  lint:
    cmds:
      - golangci-lint run {{ .OPTIONS }} ${TARGETS}
    desc: lint
    env:
      TARGETS: ./...
    preconditions:
      - which golangci-lint

  format:
    cmds:
      - task: lint
        vars:
          OPTIONS: --fix
    desc: format

  # test
  test:
    cmds:
      - go test ./internal/... {{ .OPTIONS }}
    desc: run tests
    preconditions:
      - which go

  test:verbose:
    cmds:
      - task: test
        vars:
          OPTIONS: -v
    desc: run tests (verbose)

  # coverage
  coverage:
    cmds:
      - task: test
        vars:
          OPTIONS: -cover
    desc: run tests with coverage report

  coverage:verbose:
    cmds:
      - task: test
        vars:
          OPTIONS: -cover -v
    desc: run tests with coverage report (verbose)

  # build
  build:
    cmds:
      - goreleaser {{ or .SubCommand "build" }} --clean --skip=validate {{ .OPTIONS }}
    desc: build binary
    preconditions:
      - which go
      - which goreleaser

  build:snapshot:
    cmds:
      - task: build
        vars:
          OPTIONS: --snapshot
    desc: build binary (snapshot)

  # archive
  archive:
    cmds:
      - task: build
        vars:
          SubCommand: release
          OPTIONS: --skip=publish
    desc: archive binary

  archive:snapshot:
    cmds:
      - task: build
        vars:
          SubCommand: release
          OPTIONS: --skip=publish --snapshot
    desc: archive binary (snapshot)

  # changelog
  changelog:
    cmds:
      - git-chglog --config .chglog/config.yaml --output CHANGELOG.md {{ if .NEXT_VERSION }}--next-tag ${NEXT_VERSION}{{ end }}
    desc: generate changelog
    preconditions:
      - which git-chglog

  # release
  release:
    cmds:
      - task: changelog
      - echo ${NEXT_VERSION} > VERSION
      - git add CHANGELOG.md VERSION
      - 'LEFTHOOK=0 git commit -m "docs: updated CHANGELOG for ${NEXT_VERSION}"'
      - git tag ${NEXT_VERSION}
      - git push origin main ${NEXT_VERSION}
    desc: release a new version
    preconditions:
      - which git
      - '[[ "${NEXT_VERSION}" =~ ^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$ ]]'
      - '[[ "$(git branch --show-current)" == "main" ]]'
